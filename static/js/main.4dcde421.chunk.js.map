{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","class","role","type","msg","Navbar","useState","color","setColor","className","mode","href","title","id","onClick","toggleMode","onChange","for","text","defaultProps","TextForm","setText","heading","value","style","backgroundColor","rows","event","target","BtnColor","newText","toUpperCase","showAlert","console","log","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","toLowerCase","split","length","App","setMode","setAlert","btnColor","setBtnColor","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4dcde421.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n        props.alert && <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n            <strong>{props.alert.type}:</strong> {props.alert.msg} \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './css/Navbar.css'\r\n// import { Link } from 'react-router-dom'\r\n\r\nfunction Navbar(props) {\r\n    const [color, setColor] = useState(null)\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                    <li className=\"nav-item\">\r\n                    <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                    </li>\r\n                    \r\n                </ul>\r\n                {/* <form className=\"d-flex\">\r\n                    <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                    <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                </form> */}\r\n                <div className={`theme-menu text-${props.mode === 'dark'? 'light' : 'dark'}`}>\r\n                    <p>Themes Color</p>\r\n                    <button className=\"theme-color theme-red\" onClick={() => {\r\n                        setColor('red')\r\n                        props.toggleMode(color)\r\n                    }}></button>\r\n                    <button className=\"theme-color theme-orange\" onClick={() => {\r\n                        setColor('orange')\r\n                        props.toggleMode(color)\r\n                    }}></button>\r\n                    <button className=\"theme-color theme-green\" onClick={() => {\r\n                        setColor('green')\r\n                        props.toggleMode(color)\r\n                    }}></button>\r\n                </div>\r\n                <div class={`form-check form-switch text-${props.mode === 'dark'? 'light' : 'dark'}`}>\r\n                    <input onChange={() => {\r\n                        setColor(props.mode === 'dark' ? 'dark' : 'light')\r\n                        props.toggleMode(color)\r\n                    }} class=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                    <label class=\"form-check-label\" for=\"flexSwitchCheckDefault\">{props.text}</label>\r\n                    </div>\r\n                \r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Title'\r\n}\r\n\r\nexport default Navbar\r\n","import React, {useState} from 'react'\r\n\r\nfunction TextForm(props) {\r\n\r\n    const [text, setText] = useState('')\r\n\r\n    const handleUpClick = (event) =>{\r\n        let newText = text.toUpperCase()\r\n        setText(newText)\r\n        props.showAlert('Coverted to UpperCase ', 'Success')\r\n    }\r\n\r\n    const handleLoClick = () => {\r\n        let newText = text.toLowerCase()\r\n        setText(newText)\r\n        props.showAlert('Converted to Lowercase ', 'Success')\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const handleCopy = () => {\r\n        console.log(\"I am copy\")\r\n        var text = document.getElementById('myBox')\r\n        text.select()\r\n        text.setSelectionRange(0, 9999)\r\n        navigator.clipboard.writeText(text.value)\r\n        props.showAlert('Text copied ', 'Success')\r\n    }\r\n    return (\r\n        <>\r\n        <div>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea value={text} className=\"form-control\" style={{backgroundColor: props.mode === 'light' ? 'white' : 'grey',\r\n            color: props.mode === 'dark'? 'white' : 'black'}} id=\"myBox\" rows=\"8\" onChange={handleOnChange}></textarea>\r\n            </div>\r\n            <button className={`bt btn-${props.BtnColor} mx-1`} onClick={handleUpClick} >Covert to Uppercase</button>\r\n            <button className={`bt btn-${props.BtnColor} mx-1`} onClick={handleCopy} >Copy Text</button>\r\n            <button className={`bt btn-${props.BtnColor} mx-1`} onClick={handleLoClick}>Covert to Lowercase</button>\r\n            <div className=\"container\">\r\n                <h1>Your text details</h1>\r\n                <p>{text.split(' ').length} words and {text.length} characters</p>\r\n                <p>{0.008 * text.split(' ').length} Minutes read</p>\r\n                <h2>Preview</h2>\r\n                <p>{text}</p>\r\n            </div>\r\n        </div>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default TextForm\r\n","import React, { useState } from 'react'\nimport './App.css';\n// import About from './components/About';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [text, setText] = useState('Enable dark Mode')\n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState(null)\n  const [btnColor, setBtnColor] = useState('primary')\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 2000);\n  }\n\n  function toggleMode(color ){\n    // console.log(\"toggle\")\n    console.log(\"color\", color)\n    console.log(\"mode\", mode)\n    if(color === 'dark'){\n      setText('Enable Dark Mode')\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Light mode has been enabled\", \"Success\")\n    }else if(color ==='red'){\n      setMode('dark')\n      setBtnColor('danger')\n      document.body.style.backgroundColor = 'rgb(123 7 12)'\n      setText('Back To Normal Mode')\n    } else if(color === \"orange\"){\n      setMode('dark')\n      setBtnColor('warning')\n      document.body.style.backgroundColor = '#b27b18'\n      setText('Back To Normal Mode')\n    }\n     else if(color === \"green\"){\n      setMode('dark')\n      setBtnColor('success')\n      document.body.style.backgroundColor = '#18b25d'\n      setText('Back To Normal Mode')\n    }\n    else{\n      setMode('dark')\n      setText('Disable Dark Mode')\n      document.body.style.backgroundColor = '#13214d'\n      document.body.style.color = 'white'\n      showAlert(\"Dark mode has been enabled\", \"Success\")\n    }\n  }\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar title='TextPads' mode={mode} toggleMode={toggleMode} text={text} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n      {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\"> */}\n            <TextForm heading=\"Enter your text here\" mode={mode} showAlert={showAlert} BtnColor={btnColor} />\n          {/* </Route>\n        </Switch> */}\n      \n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}